# -*- coding: utf-8 -*-
"""Optimizing a Healthcare Network for Improved Service Delivery.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EXhP9fVXSao-ipWgifruMc2bKZiXEYo4
"""

from google.colab import files
uploaded = files.upload()

import io
import pandas as pd

df = pd.read_csv(io.BytesIO(uploaded['Structured data.csv']))
del df['Unnamed: 0']
df.head()

import numpy as np

df['Population'] = df['Population'].apply(lambda x: x*0.75).apply(np.ceil)
df=df.astype({"Population": int})
df.head()

df.dtypes
print(df['priority population(%) '])

df['bias']=df['Population']*(df['Poverty rate']/100)*(df['priority population(%) ']/100)
df.head()

df['Population']=df['bias']+df['Population']
df=df.astype({"Population": int})
df=df.drop(['bias'],axis=1)
df['staff to patient ratio'] = df['Population']/ df['Facility Staff Count']
df = df.astype({"staff to patient ratio": int})
df.head()

# find percentage of the population of each area 
population_percentage_in_area = []
total_population = df['Population'].sum()
total_staff = df['Facility Staff Count'].sum()
for i in df['Population']:
    p = (i / total_population) * 100
    population_percentage_in_area.append(p)
    
# convert number of staff according to the population percentage in each area

staff = []
for i in df.index:
    s = (population_percentage_in_area[i] * total_staff) / 100
    staff.append(round(s))
# Display Population Percantage in each area & converted staff according to it
print(population_percentage_in_area)
print(staff)

new_facility_with_updated_staff = df.drop(['Facility Staff Count', 'staff to patient ratio'], axis = 1)
new_facility_with_updated_staff['New Staff Count'] = staff  
new_facility_with_updated_staff['New staff to patient ratio'] = round(new_facility_with_updated_staff['Population'] / new_facility_with_updated_staff['New Staff Count'])
new_facility_with_updated_staff

# install geopy
! pip install geopy

from geopy.geocoders import Nominatim 
geolocator = Nominatim()
area = []
for i in new_facility_with_updated_staff['Zip_Code']:
    location = geolocator.geocode(i) 
    area.append(location.address)
    
area

new_facility_with_updated_staff['Area'] = area
new_facility_with_updated_staff

# arrange the columns of df
new_facility_with_updated_staff = new_facility_with_updated_staff[['Facility ID', 'Zip_Code', 'Area', 'Population', 'New Staff Count', 'New staff to patient ratio']]
new_facility_with_updated_staff

from geopy.geocoders import Nominatim 
geolocator = Nominatim()

# import geodesic module for finding distance between 2 locations
from geopy.distance import geodesic
iterator = len(new_facility_with_updated_staff.index)

distance_in_km = []
source_area = []
destination_area = []

# calculate distance from one area to another area and store results lists
for i in range(iterator):
    location_a = geolocator.geocode(new_facility_with_updated_staff['Zip_Code'][i]) 
    area1 = new_facility_with_updated_staff['Facility ID'][i]
    a_lat = location_a.latitude
    a_long = location_a.longitude
    point_a = (a_lat, a_long)
    
    for j in range(i+1, iterator):
        location_b = geolocator.geocode(new_facility_with_updated_staff['Zip_Code'][j]) 
        b_lat = location_b.latitude
        b_long = location_b.longitude
        point_b = (b_lat, b_long)
        distance_km = geodesic(point_a, point_b).km 
        distance_in_km.append(round(distance_km,2))
        area2 = new_facility_with_updated_staff['Facility ID'][j]
        source_area.append(area1)
        destination_area.append(area2)

distance_df = pd.DataFrame({"Source Area": source_area,
                           "Destination Area": destination_area,
                           "Distance (Km)": distance_in_km})

distance_df

distance_df_pivot = distance_df.pivot(index = "Source Area", columns = "Destination Area")
distance_df_pivot.replace(np.nan," ")

!pip install folium==0.5.0
import folium

import folium
loc = geolocator.geocode("98007") 
#print((location.latitude, location.longitude)) 
world_map = folium.Map(location=[loc.latitude, loc.longitude], zoom_start=12)

# display world map
world_map

# instantiate a feature group for the incidents in the dataframe
incidents = folium.map.FeatureGroup()
lat = loc.latitude
lng = loc.longitude
# loop through the 100 crimes and add each to the incidents feature group
incidents.add_child(
        folium.CircleMarker(
            [lat, lng],
            radius=5, 
            color='black',
            fill=True,
            fill_color='red',
            fill_opacity=0.8
        )
    )

# add incidents to map
label = geolocator.geocode("98007").address
folium.Marker([lat, lng], popup=label).add_to(world_map)   
world_map.add_child(incidents)

latitudes = []
longitudes = []
facility_area_zip_code = ['98007','98290','98065','98801','98104'] 
facility_id = ['A','B','C','D','E']
for i in facility_area_zip_code:
    location = geolocator.geocode(i)
    lat = location.latitude
    latitudes.append(lat)
    lng = location.longitude
    longitudes.append(lng)
    #facility_id.append(facility)

print(facility_id)
print(facility_area_zip_code)
print(latitudes)
print(longitudes)

area_with_coordinates = pd.DataFrame({"Facility Id":facility_id ,
                                     "Area Zip Code": facility_area_zip_code,
                                     "Latitudes": latitudes,
                                     "Longitudes": longitudes})

area_with_coordinates

# map from facility id 'A' to 'B'
import folium 

my_map1 = folium.Map(location = [area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]], 
zoom_start = 9) 

folium.Marker([area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]], 
popup = "Facility Id: "+area_with_coordinates['Facility Id'][0],icon=folium.Icon(color='red',icon_color='white')).add_to(my_map1) 


folium.Marker([area_with_coordinates['Latitudes'][1], area_with_coordinates['Longitudes'][1]], 
popup = "Facility Id: "+area_with_coordinates['Facility Id'][1],icon=folium.Icon(color='red',icon_color='white')).add_to(my_map1) 

folium.PolyLine(locations = [(area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]), (area_with_coordinates['Latitudes'][1], area_with_coordinates['Longitudes'][1])], 
line_opacity = 0.8,line_color = 'red').add_to(my_map1) 

my_map1

# map from facility 'A' to 'C'
my_map2 = folium.Map(location = [area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]], 
zoom_start = 10) 

folium.Marker([area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]], 
popup = "Facility Id: "+area_with_coordinates['Facility Id'][0],icon=folium.Icon(color='red',icon_color='white')).add_to(my_map2) 

folium.Marker([area_with_coordinates['Latitudes'][2], area_with_coordinates['Longitudes'][2]], 
popup = "Facility Id: "+area_with_coordinates['Facility Id'][2],icon=folium.Icon(color='red',icon_color='white')).add_to(my_map2) 
folium.PolyLine(locations = [(area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]), (area_with_coordinates['Latitudes'][2], area_with_coordinates['Longitudes'][2])], 
line_opacity = 0.5).add_to(my_map2) 

my_map2

# map from facility 'A' to 'D'
my_map3 = folium.Map(location = [area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]], 
zoom_start = 8.3) 

folium.Marker([area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]], 
popup = "Facility Id: "+area_with_coordinates['Facility Id'][0],icon=folium.Icon(color='red',icon_color='white')).add_to(my_map3) 

folium.Marker([area_with_coordinates['Latitudes'][3], area_with_coordinates['Longitudes'][3]], 
popup = "Facility Id: "+area_with_coordinates['Facility Id'][3],icon=folium.Icon(color='red',icon_color='white')).add_to(my_map3) 
folium.PolyLine(locations = [(area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]), (area_with_coordinates['Latitudes'][3], area_with_coordinates['Longitudes'][3])], 
line_opacity = 0.5).add_to(my_map3) 

my_map3

# map from facility 'A' to 'E'
my_map4 = folium.Map(location = [area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]], 
zoom_start = 9) 

folium.Marker([area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]], 
popup = "Facility Id: "+area_with_coordinates['Facility Id'][0],icon=folium.Icon(color='red',icon_color='white')).add_to(my_map4) 

folium.Marker([area_with_coordinates['Latitudes'][4], area_with_coordinates['Longitudes'][4]], 
popup = "Facility Id: "+area_with_coordinates['Facility Id'][4],icon=folium.Icon(color='red',icon_color='white')).add_to(my_map4) 


folium.PolyLine(locations = [(area_with_coordinates['Latitudes'][0], area_with_coordinates['Longitudes'][0]), (area_with_coordinates['Latitudes'][4], area_with_coordinates['Longitudes'][4])], 
line_opacity = 0.5).add_to(my_map4) 

my_map4